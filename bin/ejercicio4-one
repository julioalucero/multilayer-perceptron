#!/usr/bin/env ruby
$LOAD_PATH.unshift File.expand_path('../../lib', __FILE__)

require 'perceptron'
require 'my_csv'

puts "\n" + "*" * 80  + "\n" +
     " " * 20 + "Bienvenido al Ejercicio 4" + " " * 20 + "\n" +
     " " * 20 + "leave-one-out" + " " * 20 + "\n" +
     "*" * 80 + "\n"

or_path = 'iris.csv'
csv_iris = MyCsv::SpecialsCsv.new(or_path)
matrix = csv_iris.matrix

matrix.shuffle!

k = 1
tamanio = matrix.count
particiones = tamanio / k

# En la matrix va recorriendo del modo leave-k-out
# seg√∫n el k que se eligio.
errProm = 0.0
err = []
particiones.times do |i|
  entrenamiento =  matrix[0...(k*i)] + matrix[(k*(i+1))..tamanio]
  test = matrix[(k*i)...(k*(i+1))]
  iris = Perceptron::NeuronalNetwork2.new(3, entrenamiento, [4,3,3], 2, 0.3, false)
  iris.trainingNetwork
  err << iris.test(test)
  errProm += err.last
  p "Iteracion numero #{i} "
end

mean = 0.0
desv = 0.0
err.each {|er| mean+=er}
mean = mean/tamanio
err.each {|er| desv += (er-mean)**2.0}
desv = desv/tamanio
mean = mean/tamanio
p "El error promedio es: "
p mean
p "La desviacion es: "
p desv
